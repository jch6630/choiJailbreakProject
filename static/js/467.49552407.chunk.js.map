{"version":3,"file":"static/js/467.49552407.chunk.js","mappings":"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","sources":["firebase.js","pages/List.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n// firestore를 불러오는 모듈을 임포트\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\n// Firebase 구성 정보 설정\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId\r\n};\r\n\r\n  // Firebase 인스턴스 초기화\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// firestore 객체 생성\r\nconst db = getFirestore(app);\r\n// firestore export\r\nexport {db}","import { db } from '../firebase'; // Firebase 설정 및 연결\r\nimport { Buffer } from 'buffer'; // Buffer를 사용하여 Base64 데이터를 처리\r\nimport { query, orderBy, onSnapshot, collection } from 'firebase/firestore'; // Firestore 관련 함수들\r\nimport { useEffect, useState } from 'react'; // React hooks\r\nimport styled from 'styled-components'; // 스타일링을 위한 styled-components\r\nimport { jsPDF } from 'jspdf'; // PDF 생성 라이브러리\r\nimport html2canvas from 'html2canvas'; // HTML 영역을 캡처하기 위한 라이브러리\r\n\r\n// 페이지 전체 Wrapper 스타일\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #f9f9f9;\r\n  font-family: 'Noto Sans', sans-serif;\r\n  min-height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\n// 테이블 컨테이너 스타일\r\nconst TableContainer = styled.div`\r\n  width: 1050px;\r\n  max-width: 1200px;\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\n// 제목 스타일\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 1rem;\r\n  color: #555;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.9rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\n// 테이블 스타일\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 0.95rem;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.6rem;\r\n  }\r\n`;\r\n\r\n// 테이블 행 스타일\r\nconst TableRow = styled.tr`\r\n  &:nth-child(even) {\r\n    background-color: #f8f8f8;\r\n  }\r\n`;\r\n\r\n// 테이블 데이터 셀 스타일\r\nconst TableCell = styled.td`\r\n  border: 1px solid black;\r\n  padding: 10px;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 8px;\r\n  }\r\n`;\r\n\r\n// 테이블 헤더 스타일\r\nconst TableHeader = styled.th`\r\n  background-color: #c8c8c8;\r\n  border: 1px solid black;\r\n  color: black;\r\n  padding: 12px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 10px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\n// PDF 다운로드 버튼 스타일\r\nconst DownloadButton = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  margin-bottom: 5px;\r\n\r\n  &:hover {\r\n    background-color: rgb(57, 126, 61);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 10px 20px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\n// 로딩 메시지 스타일\r\nconst LoadingMessage = styled.div`\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nfunction List() {\r\n  const [data, setData] = useState([]); // 명부 데이터를 저장하는 상태\r\n  const [pageNum, setPageNum] = useState([]); // 명부 데이터를 나눌 페이지\r\n  const [loading, setLoading] = useState(true); // 로딩 상태를 관리\r\n\r\n  // 컴포넌트가 처음 렌더링될 때 명부 데이터를 가져옴\r\n  useEffect(() => {\r\n    fetchList();\r\n  }, []);\r\n\r\n  // Firestore에서 데이터 가져오는 함수\r\n  const fetchList = () => {\r\n    const q = query(collection(db, 'List'), orderBy('time'));\r\n    onSnapshot(q, (snapshot) => {\r\n      const newData = snapshot.docs.map((doc) => {\r\n        const { sign, name, phone, add, birth } = doc.data();\r\n        const decodedURL = sign.replace(/^data:image\\/\\w+;base64,/, '');\r\n        const buf = Buffer.from(decodedURL, 'base64');\r\n        const blob = new Blob([buf], { type: 'image/png' });\r\n        const url = URL.createObjectURL(blob);\r\n        return { id: doc.id, name, phone, add, birth, sign: url };\r\n      });\r\n\r\n      setData(newData);\r\n      const totalPages = Math.ceil(newData.length / 17);\r\n      setPageNum([...Array(totalPages).keys()]); // 0부터 총 페이지 수까지의 배열 생성\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // PDF 다운로드 함수\r\n  const downloadPDF = async () => {\r\n    const doc = new jsPDF({\r\n      orientation: 'portrait',\r\n      unit: 'mm',\r\n      format: 'a4',\r\n    });\r\n\r\n    // html2canvas로 TableContainer 캡처 후 PDF에 추가\r\n    for (let i = 0; i < pageNum.length; i++) {\r\n      const containerId = `pdfContent${i}`;\r\n\r\n      const tableContainer = document.getElementById(containerId);\r\n\r\n      // html2canvas로 캡처하여 PDF에 추가\r\n      await html2canvas(tableContainer, {\r\n        ignoreElements: (element) => {\r\n          return element.tagName === 'IFRAME'; // iframe을 무시\r\n        },\r\n        useCORS: true, // CORS 설정을 활성화하여 외부 콘텐츠를 캡처\r\n        allowTaint: true, // 이미지와 같은 비동기 리소스를 허용\r\n      }).then((canvas) => {\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const imgProps = doc.getImageProperties(imgData);\r\n        const pdfWidth = doc.internal.pageSize.getWidth();\r\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n\r\n        if (i > 0) doc.addPage(); // 첫 페이지가 아니면 새 페이지 추가\r\n        doc.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\r\n      });\r\n    }\r\n\r\n    // PDF 저장\r\n    doc.save('탄원서_동의명부.pdf');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* PDF 다운로드 버튼 */}\r\n      <DownloadButton onClick={downloadPDF}>PDF로 다운로드</DownloadButton>\r\n\r\n      {/* 테이블 및 내용 */}\r\n      {loading ? (\r\n        <TableContainer id=\"pdfContent\">\r\n          <Title>탄원서 동의명부</Title>\r\n          <LoadingMessage>로딩 중입니다...</LoadingMessage>\r\n        </TableContainer>\r\n      ) : data.length === 0 ? (\r\n        <TableContainer id=\"pdfContent\">\r\n          <Title>탄원서 동의명부</Title>\r\n          <Description>\r\n            본인은 상기 탄원인과 뜻을 같이하여 피고인 최정원이 바른길을 갈 수\r\n            있도록 선도하며, 교화에 적극적으로 동참하고 협조하겠습니다. 아무쪼록\r\n            재판장님과 검사님의 너그러운 선처 부탁드립니다.\r\n          </Description>\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                <TableHeader>순번</TableHeader>\r\n                <TableHeader>성명</TableHeader>\r\n                <TableHeader>주소</TableHeader>\r\n                <TableHeader>생년월일</TableHeader>\r\n                <TableHeader>전화번호</TableHeader>\r\n                <TableHeader>서명</TableHeader>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <TableRow>\r\n                <TableCell colSpan=\"6\">작성된 명부가 없습니다.</TableCell>\r\n              </TableRow>\r\n            </tbody>\r\n          </StyledTable>\r\n        </TableContainer>\r\n      ) : (\r\n        pageNum.map((pN, pageIndex) => {\r\n          const currentPage = parseInt(pN, 10); // pN을 숫자로 변환\r\n          const itemsPerPage = 17; // 한 페이지에 표시할 데이터 개수\r\n          const startIndex = currentPage * itemsPerPage; // 페이지 시작 인덱스\r\n          const endIndex = startIndex + itemsPerPage; // 페이지 끝 인덱스\r\n          const pageData = data.slice(startIndex, endIndex); // 현재 페이지의 데이터 슬라이싱\r\n\r\n          return (\r\n            <TableContainer key={pageIndex} id={`pdfContent${currentPage}`}>\r\n              <Title>탄원서 동의명부</Title>\r\n              <Description>\r\n                본인은 상기 탄원인과 뜻을 같이하여 피고인 최정원이 바른길을 갈\r\n                수 있도록 선도하며, 교화에 적극적으로 동참하고 협조하겠습니다.\r\n                아무쪼록 재판장님과 검사님의 너그러운 선처 부탁드립니다.\r\n              </Description>\r\n              <StyledTable>\r\n                <thead>\r\n                  <tr>\r\n                    <TableHeader>순번</TableHeader>\r\n                    <TableHeader>성명</TableHeader>\r\n                    <TableHeader>주소</TableHeader>\r\n                    <TableHeader>생년월일</TableHeader>\r\n                    <TableHeader>전화번호</TableHeader>\r\n                    <TableHeader>서명</TableHeader>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {pageData.map((item, index) => (\r\n                    <TableRow key={item.id}>\r\n                      <TableCell>{startIndex + index + 1}</TableCell>\r\n                      <TableCell>{item.name}</TableCell>\r\n                      <TableCell>{item.add}</TableCell>\r\n                      <TableCell>{item.birth}</TableCell>\r\n                      <TableCell>{item.phone}</TableCell>\r\n                      <TableCell>\r\n                        <img\r\n                          src={item.sign}\r\n                          alt=\"서명\"\r\n                          width=\"50\"\r\n                          height=\"50\"\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </tbody>\r\n              </StyledTable>\r\n            </TableContainer>\r\n          );\r\n        })\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","TableContainer","_templateObject2","Title","h1","_templateObject3","Description","p","_templateObject4","StyledTable","table","_templateObject5","TableRow","tr","_templateObject6","TableCell","td","_templateObject7","TableHeader","th","_templateObject8","DownloadButton","button","_templateObject9","LoadingMessage","_templateObject10","data","setData","useState","pageNum","setPageNum","loading","setLoading","useEffect","fetchList","q","query","collection","orderBy","onSnapshot","snapshot","newData","docs","map","doc","sign","name","phone","add","birth","decodedURL","replace","buf","Buffer","from","blob","Blob","type","url","URL","createObjectURL","id","totalPages","Math","ceil","length","Array","keys","_jsxs","children","_jsx","onClick","async","jsPDF","orientation","unit","format","i","containerId","concat","tableContainer","document","getElementById","html2canvas","ignoreElements","element","tagName","useCORS","allowTaint","then","canvas","imgData","toDataURL","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addPage","addImage","save","colSpan","pN","pageIndex","currentPage","parseInt","startIndex","endIndex","pageData","slice","item","index","src","alt"],"sourceRoot":""}