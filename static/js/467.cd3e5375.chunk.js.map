{"version":3,"file":"static/js/467.cd3e5375.chunk.js","mappings":"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","sources":["firebase.js","pages/List.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n// firestore를 불러오는 모듈을 임포트\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\n// Firebase 구성 정보 설정\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId\r\n};\r\n\r\n  // Firebase 인스턴스 초기화\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// firestore 객체 생성\r\nconst db = getFirestore(app);\r\n// firestore export\r\nexport {db}","import { db } from '../firebase';\r\nimport { Buffer } from 'buffer';\r\nimport { query, orderBy, onSnapshot, collection } from 'firebase/firestore';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { jsPDF } from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 5vh 0;\r\n  height: auto;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f0f0f0;\r\n  font-family: 'Noto Serif', serif;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 90vw;\r\n    padding: 10vh 0;\r\n  }\r\n`;\r\n\r\nconst TableBack = styled.div`\r\n  padding: 3vw;\r\n  height: auto;\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  border-radius: 15px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Noto Serif', serif;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 90%;\r\n    padding: 5vw;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 1.5rem;\r\n  color: #555;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.9rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 2rem;\r\n  font-family: 'Noto Serif', serif;\r\n  table-layout: fixed;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst StyledTdTh = styled.td`\r\n  border: 1px solid #ddd;\r\n  padding: 12px 16px;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  line-height: 1.5;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 8px;\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst LoadingText = styled.p`\r\n  font-size: 1.2rem;\r\n  color: #666;\r\n  font-family: 'Noto Serif', serif;\r\n  text-align: center;\r\n`;\r\n\r\nconst SignImage = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: contain;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst columnWidths = {\r\n  seq: '8%',\r\n  name: '12%',\r\n  address: '40%',\r\n  birth: '16%',\r\n  phone: '22%',\r\n  sign: '12%',\r\n};\r\n\r\nconst DownloadButton = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 24px;\r\n  margin-bottom: 12px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #388e3c;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 10px 20px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nfunction List() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    listCall();\r\n  }, []);\r\n\r\n  const listCall = async () => {\r\n    const q = query(collection(db, 'List'), orderBy('time'));\r\n    onSnapshot(q, (snapshot) => {\r\n      const contentArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      const transformedData = contentArray.map((content) => {\r\n        const { sign, name, phone, add, birth } = content;\r\n\r\n        const decodedURL = sign.replace(/^data:image\\/\\w+;base64,/, '');\r\n        const buf = Buffer.from(decodedURL, 'base64');\r\n        const blob = new Blob([buf], { type: 'image/png' });\r\n        const file = new File([blob], `${name}_${phone}.png`, {\r\n          type: 'image/png',\r\n        });\r\n        const url = URL.createObjectURL(file);\r\n\r\n        return {\r\n          name,\r\n          add,\r\n          birth,\r\n          phone,\r\n          sign: url,\r\n        };\r\n      });\r\n\r\n      setData(transformedData);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // PDF 다운로드 함수\r\n  const downloadPDF = () => {\r\n    const input = document.getElementById('pdfContent'); // TableBack 영역을 PDF로 변환\r\n\r\n    // 캔버스 크기 조정\r\n    html2canvas(input, {\r\n      scale: 2, // 고해상도 캡처\r\n      width: input.scrollWidth, // scroll width로 캡처\r\n      height: input.scrollHeight, // scroll height로 캡처\r\n      x: 0, // 캔버스 x 위치\r\n      y: 0, // 캔버스 y 위치\r\n    }).then((canvas) => {\r\n      const imgData = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF();\r\n\r\n      const pageHeight = pdf.internal.pageSize.height;\r\n      const imgHeight =\r\n        (canvas.height * pdf.internal.pageSize.width) / canvas.width;\r\n\r\n      let y = 0;\r\n\r\n      // 첫 번째 페이지 추가\r\n      pdf.addImage(\r\n        imgData,\r\n        'PNG',\r\n        0,\r\n        y,\r\n        pdf.internal.pageSize.width,\r\n        imgHeight\r\n      );\r\n\r\n      // 페이지가 넘어가면 새 페이지 추가\r\n      while (y + imgHeight > pageHeight) {\r\n        y = 0;\r\n        pdf.addPage();\r\n        pdf.addImage(\r\n          imgData,\r\n          'PNG',\r\n          0,\r\n          y,\r\n          pdf.internal.pageSize.width,\r\n          imgHeight\r\n        );\r\n      }\r\n\r\n      pdf.save('tableback_image.pdf'); // PDF 파일 다운로드\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {/* PDF 다운로드 버튼을 TableBack 상단에 위치시킴 */}\r\n      <DownloadButton onClick={downloadPDF}>PDF로 다운로드</DownloadButton>\r\n      <TableBack id=\"pdfContent\">\r\n        <Title>탄원서 동의명부</Title>\r\n        <Description>\r\n          본인은 상기 탄원인과 뜻을 같이하여 피고인 최정원이 바른길을 갈 수\r\n          있도록 선도하며, 교화에 적극적으로 동참하고 협조하겠습니다. 아무쪼록\r\n          재판장님과 검사님의 너그러운 선처 부탁드립니다.\r\n        </Description>\r\n\r\n        {loading ? (\r\n          <LoadingText>로딩 중...</LoadingText>\r\n        ) : (\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                <StyledTdTh style={{ width: columnWidths.seq }}>\r\n                  순번\r\n                </StyledTdTh>\r\n                <StyledTdTh style={{ width: columnWidths.name }}>\r\n                  성명\r\n                </StyledTdTh>\r\n                <StyledTdTh style={{ width: columnWidths.address }}>\r\n                  주소\r\n                </StyledTdTh>\r\n                <StyledTdTh style={{ width: columnWidths.birth }}>\r\n                  생년월일\r\n                </StyledTdTh>\r\n                <StyledTdTh style={{ width: columnWidths.phone }}>\r\n                  전화번호\r\n                </StyledTdTh>\r\n                <StyledTdTh style={{ width: columnWidths.sign }}>\r\n                  서명\r\n                </StyledTdTh>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.length > 0 ? (\r\n                data.map((item, index) => (\r\n                  <tr key={item.id}>\r\n                    <StyledTdTh style={{ width: columnWidths.seq }}>\r\n                      {index + 1}\r\n                    </StyledTdTh>\r\n                    <StyledTdTh style={{ width: columnWidths.name }}>\r\n                      {item.name}\r\n                    </StyledTdTh>\r\n                    <StyledTdTh style={{ width: columnWidths.address }}>\r\n                      {item.add}\r\n                    </StyledTdTh>\r\n                    <StyledTdTh style={{ width: columnWidths.birth }}>\r\n                      {item.birth}\r\n                    </StyledTdTh>\r\n                    <StyledTdTh style={{ width: columnWidths.phone }}>\r\n                      {item.phone}\r\n                    </StyledTdTh>\r\n                    <StyledTdTh style={{ width: columnWidths.sign }}>\r\n                      <SignImage src={item.sign} alt=\"서명\" />\r\n                    </StyledTdTh>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <StyledTdTh colSpan=\"6\">작성된 명부가 없습니다.</StyledTdTh>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n        )}\r\n      </TableBack>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default List;\r\n"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","TableBack","_templateObject2","Title","h1","_templateObject3","Description","p","_templateObject4","StyledTable","table","_templateObject5","StyledTdTh","td","_templateObject6","LoadingText","_templateObject7","SignImage","img","_templateObject8","columnWidths","DownloadButton","button","_templateObject9","data","setData","useState","loading","setLoading","useEffect","listCall","async","q","query","collection","orderBy","onSnapshot","snapshot","transformedData","docs","map","doc","_objectSpread","id","content","sign","name","phone","add","birth","decodedURL","replace","buf","Buffer","from","blob","Blob","type","file","File","concat","URL","createObjectURL","_jsxs","children","_jsx","onClick","downloadPDF","input","document","getElementById","html2canvas","scale","width","scrollWidth","height","scrollHeight","x","y","then","canvas","imgData","toDataURL","pdf","jsPDF","pageHeight","internal","pageSize","imgHeight","addImage","addPage","save","style","length","item","index","src","alt","colSpan"],"sourceRoot":""}